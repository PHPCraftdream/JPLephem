<?php

namespace Marando\JPLephem\DE;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-17 at 23:59:51.
 */
class DEReaderTest extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\JPLephem\DE\DEReader::interpPlanet
   */
  public function testInterpPlanet() {
    $de = new DEReader(2415020.5, DEVer::DE421());

    $t = $de->interpPlanet(5);
    $c = $de->interpPlanet(4);

    $this->assertEquals(-3.45140763519853500000, $t->subtract($c)->x->au);
  }

  /**
   * @covers Marando\JPLephem\DE\DEReader::interp
   * @todo   Implement testInterp().
   */
  public function testInterp() {
    $de = new DEReader(2421959.5, DEVer::DE421());

    $t = $de->interp(9, 3, true);
    $c = $de->interp(2, 3, true);

    $this->assertEquals(-0.00313602600060168200, $t[5] - $c[5]);
  }

  /**
   * @covers Marando\JPLephem\DE\DEReader::testpo
   */
  public function testTestpo() {
    // Get the tests
    $testCount = 50;
    $tests     = DEReader::testpo(DEVer::DE421());

    $i = 0;
    foreach ($tests as $test) {
      // Skip non-planet tests
      if ($test->center >= 10 || $test->target >= 10)
        continue;

      /* Skip Earth since the interpolated results refer to the barycenter and
       * the test data refers to the mass center. These tests will be covered
       * on the SSOBj testing
       */
      if ($test->center == 3 || $test->target == 3)
        continue;

      // Test values
      $jde    = $test->jde;
      $target = $test->target;
      $center = $test->center;
      $e      = $test->element - 1;

      // Interp coordinate
      $de     = new DEReader($jde);
      $t      = $de->interp($target, 3, true)[$e];
      $c      = $de->interp($center, 3, true)[$e];
      $result = round($t - $c, 15);

      // Prepare message of results
      $message = <<<MESSAGE
---------------------------------
     JDE: {$jde}
       T: {$target}
       C: {$center}
Expected: $test->value
  Actual: $result
---------------------------------
MESSAGE;

      // Assert the values match
      $this->assertTrue(abs($result - $test->value) < 1e-13, $message);

      // Only run the define number of tests
      if ($i == $testCount)
        break;

      $i++;
    }
  }

}
